apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <APPLICATION_NAME>
  name: <APPLICATION_NAME>-<ENVIRONMENT>-deployment
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: <POD_REPLICAS>
  selector:
    matchLabels:
      app.kubernetes.io/name: <APPLICATION_NAME>-<ENVIRONMENT>
  
  #Template
  template:
    metadata:
      labels:
        app.kubernetes.io/name: <APPLICATION_NAME>-<ENVIRONMENT>
    spec:
      containers:
      - name: <APPLICATION_NAME>-container
        image: <REGISTRY_URL>/<ENVIRONMENT>-<APPLICATION_NAME>:<CI_COMMIT_SHORT_SHA>
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /fsutil/scp/ba_scp
          name: ba-scp-volume
        ports:
          - name: http
            containerPort: <APPLICATION_PORT>
        # Liveness healthCheck
        # livenessProbe:
        #     httpGet:
        #       path: /<APPLICATION_NAME>
        #       port: http
        #     initialDelaySeconds:
        # # Allow traiffic when the probe success. Doesn't allow traffic when startup first. 
        # readinessProbe:
        #     httpGet:
        #       path: /<APPLICATION_NAME>
        #       port: http
        #     initialDelaySeconds:
        resources:
              requests:
                cpu: <REQUESTS_CPU>
                memory: <REQUESTS_MEMORY>
              limits:
                cpu: <LIMITS_CPU>
                memory: <LIMITS_MEMORY>
        # env:
        #     - name: 
        #       value: 
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-group-type
                  operator: In
                  values:
                  - <APPLICATION_GROUP>
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 99
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - <APPLICATION_NAME>-<ENVIRONMENT>
                topologyKey: "kubernetes.io/hostname"
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - <APPLICATION_NAME>-<ENVIRONMENT>
                topologyKey: "failure-domain.beta.kubernetes.io/zone"
      volumes:
      - name: ba-scp-volume
        hostPath:
          path: /fsutil/scp/ba_scp
          type: Directory